{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'; // Define a service using a base URL and expected endpoints\n\nexport const productApi = createApi({\n  reducerPath: 'productApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://62b1bba0196a9e98703c1172.mockapi.io'\n  }),\n  tagTypes: ['Post'],\n  endpoints: builder => ({\n    fetchAllProduct: builder.query({\n      query: () => ({\n        url: '/itemsSneakers'\n      })\n    }),\n    fetchAllBasket: builder.query({\n      query: () => ({\n        url: '/card'\n      })\n    }),\n    createBasket: builder.query({\n      query: () => ({\n        url: '/card',\n        method: 'POST'\n      }),\n      providesTags: result => ['Post']\n    }),\n    Basket: builder.query({\n      query: () => ({\n        url: '/card',\n        method: 'POST'\n      }),\n      providesTags: result => ['Post']\n    }),\n    fetchAllFavourite: builder.query({\n      query: () => ({\n        url: '/favorite'\n      })\n    })\n  })\n});","map":{"version":3,"names":["createApi","fetchBaseQuery","productApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","fetchAllProduct","query","url","fetchAllBasket","createBasket","method","providesTags","result","Basket","fetchAllFavourite"],"sources":["/Users/temirlan.kanafin/Desktop/git projects/reactt-sneakers/src/components/api/ProductApi.tsx"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\n// Define a service using a base URL and expected endpoints\nexport const productApi = createApi({\n  reducerPath: 'productApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://62b1bba0196a9e98703c1172.mockapi.io' }),\n  tagTypes: ['Post'],\n  endpoints: (builder) => ({\n    fetchAllProduct: builder.query({\n      query: () => ({\n         url: '/itemsSneakers'\n      })\n    }),\n    fetchAllBasket: builder.query({\n      query: () => ({\n         url: '/card'\n      })\n    }),\n    createBasket: builder.query({\n      query: () => ({\n         url: '/card',\n         method: 'POST',\n\n      }),\n      providesTags: result => ['Post']\n    }),\n    Basket: builder.query({\n      query: () => ({\n         url: '/card',\n         method: 'POST',\n\n      }),\n      providesTags: result => ['Post']\n    }),\n    fetchAllFavourite: builder.query({\n      query: () => ({\n         url: '/favorite'\n      })\n    }),\n  }),\n})"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAAC;EAClCG,WAAW,EAAE,YADqB;EAElCC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAX,CAAD,CAFS;EAGlCC,QAAQ,EAAE,CAAC,MAAD,CAHwB;EAIlCC,SAAS,EAAGC,OAAD,KAAc;IACvBC,eAAe,EAAED,OAAO,CAACE,KAAR,CAAc;MAC7BA,KAAK,EAAE,OAAO;QACXC,GAAG,EAAE;MADM,CAAP;IADsB,CAAd,CADM;IAMvBC,cAAc,EAAEJ,OAAO,CAACE,KAAR,CAAc;MAC5BA,KAAK,EAAE,OAAO;QACXC,GAAG,EAAE;MADM,CAAP;IADqB,CAAd,CANO;IAWvBE,YAAY,EAAEL,OAAO,CAACE,KAAR,CAAc;MAC1BA,KAAK,EAAE,OAAO;QACXC,GAAG,EAAE,OADM;QAEXG,MAAM,EAAE;MAFG,CAAP,CADmB;MAM1BC,YAAY,EAAEC,MAAM,IAAI,CAAC,MAAD;IANE,CAAd,CAXS;IAmBvBC,MAAM,EAAET,OAAO,CAACE,KAAR,CAAc;MACpBA,KAAK,EAAE,OAAO;QACXC,GAAG,EAAE,OADM;QAEXG,MAAM,EAAE;MAFG,CAAP,CADa;MAMpBC,YAAY,EAAEC,MAAM,IAAI,CAAC,MAAD;IANJ,CAAd,CAnBe;IA2BvBE,iBAAiB,EAAEV,OAAO,CAACE,KAAR,CAAc;MAC/BA,KAAK,EAAE,OAAO;QACXC,GAAG,EAAE;MADM,CAAP;IADwB,CAAd;EA3BI,CAAd;AAJuB,CAAD,CAA5B"},"metadata":{},"sourceType":"module"}